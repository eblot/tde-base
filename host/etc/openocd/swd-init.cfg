#------------------------------------------------------------------------------
# SWD interface

if { [info exists ::env(OPENOCD_JLINK)] } {
   # J-Link
   interface jlink
   if { [info exists ::env(OPENOCD_JLINK_SN)] } {
      jlink serial "$::env(OPENOCD_JLINK_SN)"
   }
} elseif { [info exists ::env(OPENOCD_RPI)] } {
   # RPi mmapped GPIOs
   set gpios [split "$::env(OPENOCD_RPI)" ":"]

   # it requires openocd to run as root (!)
   # chown root openocd; chmod u+s openocd
   # this should not be required (mmap to be check with relaxed IOs)
   interface bcm2835gpio

   set cpu ""
   foreach line [split [exec cat /proc/cpuinfo] "\n"] {
      set kv [split $line ":"]
      set name [string map {"\t" ""} [lindex $kv 0]]
      if {$name == "CPU part"} {
         set cpu [lindex $kv 1]
         break
      }
   }

   if {$cpu == 0xd03} {
      # Raspi3 BCM2837 (1200Mhz/1400MHz):
      bcm2835gpio_speed_coeffs 194938 48
      bcm2835gpio_peripheral_base 0x3F000000
   } elseif {$cpu == 0xc07} {
      # Raspi2 BCM2836 (900Mhz):
      bcm2835gpio_speed_coeffs 146203 36
      bcm2835gpio_peripheral_base 0x3F000000
   } elseif {$cpu == 0xb76} {
      # Raspi1 BCM2835: (700Mhz)
      bcm2835gpio_speed_coeffs 113714 28
      bcm2835gpio_peripheral_base 0x20000000
   } else {
      puts "Unknown RPi CPU"
   }

   if {[llength $gpios] < 2} {
      echo "OPENOCD_RPI should define at least SWDCLK and SWDIO pins"
      echo "  OPENOCD_RPI=<SWDCLK>:<SWDIO:\[:SRST\[:TRST\]\]"
      shutdown 1
   }

   bcm2835gpio_swd_nums [lindex $gpios 0] [lindex $gpios 1]

   if {[llength $gpios] > 2} {
      bcm2835gpio_srst_num [lindex $gpios 2]
      if {[llength $gpios] > 3 } {
         bcm2835gpio_trst_num [lindex $gpios 3]
         reset_config trst_and_srst separate srst_open_drain trst_push_pull
         jtag_ntrst_assert_width 100
         jtag_ntrst_delay 100
      } else {
         reset_config srst_only srst_open_drain
      }
      adapter_nsrst_assert_width 100
      adapter_nsrst_delay 100
   }
} else {
   # FTDI/MPSSE
   # FTDI Func    Val Dir
   # ---------------------
   # AD0  SWDCLK   0   1
   # AD1  SWDO     0   1
   # AD2  SWDI     0   0
   # AD3  SWDDIR   1   1
   # AD4  SWD/EN   1   1
   # AD5  RESET    1   1
   # AD6  LED1     1   1
   # AD7  -        0   0
   # ---------------------
   #              78  7B
   interface ftdi
   ftdi_vid_pid 0x0403 0x6014
   ftdi_channel 0
   if { [info exists ::env(OPENOCD_FTDI_SN)] } {
      ftdi_serial "$::env(OPENOCD_FTDI_SN)"
   }
   ftdi_layout_init 0x0078 0x007b
   ftdi_layout_signal SWDIO_OE -data 0x0008 -oe 0x0008
   ftdi_layout_signal SWD_EN -ndata 0x0010 -oe 0x0010
}

transport select swd
