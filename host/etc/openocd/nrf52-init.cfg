#------------------------------------------------------------------------------
# SWD interface

source [find swd-init.cfg]

if { [info exists ::env(OPENOCD_JLINK)] } {
   adapter_khz 2500
} elseif { [info exists ::env(OPENOCD_RPI)] } {
   adapter_khz 500
} else {
   adapter_khz 2500
}

#------------------------------------------------------------------------------
# nRF52

set _CHIPNAME nrf52
set _WORKAREASTART 0x20000800
set _WORKAREASIZE 0x8000
set _CPUTAPID 0x2ba01477
set _TARGETNAME $_CHIPNAME.cpu

swd newdap $_CHIPNAME cpu -expected-id $_CPUTAPID
dap create $_CHIPNAME.dap -chain-position $_CHIPNAME.cpu
target create $_TARGETNAME cortex_m -dap $_CHIPNAME.dap
$_TARGETNAME configure -work-area-phys $_WORKAREASTART -work-area-size $_WORKAREASIZE -work-area-backup 0

cortex_m reset_config sysresetreq

flash bank $_CHIPNAME.flash nrf5 0x00000000 0 4 4 $_TARGETNAME
flash bank $_CHIPNAME.uicr nrf5 0x10001000 0x1000 4 4 $_TARGETNAME

init
reset halt

# Dump the MAC address of a NRF52(832) device
proc nrf52_mac {} {
   set FICR_ADDRESS 0x10000000
   set DEVICE_ADDR_OFFSET 0xA0
   set MAC_ADDRESS [expr $FICR_ADDRESS + $DEVICE_ADDR_OFFSET]

   array unset output
   mem2array output 8 $MAC_ADDRESS 10
   set msb [expr [lindex $output 1] & 0x1]
   set MSB [expr ($msb << 7) | ($msb << 6) | [lindex $output 19]]
   puts [format "%02X:%02X:%02X:%02X:%02X:%02X" \
         $MSB \
         [lindex $output 17] \
         [lindex $output 15] \
         [lindex $output 13] \
         [lindex $output 11] \
         [lindex $output 9]]
}

