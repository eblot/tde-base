FROM alpine:3.10

ENV CLANG9PATH=/usr/local/clang9
ENV BINUTILSPATH=/usr/local/arm-none-eabi
ENV PATH=$PATH:${CLANG9PATH}/bin:${BINUTILSPATH}/bin

WORKDIR /

LABEL description="Development environment w/ full documentation generation"
LABEL maintainer="Emmanuel Blot <emmanuel.blot@free.fr>"

RUN apk update
RUN apk add ninja cmake git patch pv xz doxygen curl
RUN apk add libusb libftdi1 libffi readline ncurses openssl
RUN apk add build-base linux-headers
RUN apk add libffi-dev readline-dev bash ncurses-dev openssl-dev
RUN apk add python3 python3-dev
RUN pip3 install -U pip
RUN pip3 install readline paramiko netifaces
RUN pip3 install six crcmod ruamel.yaml protobuf tabulate
RUN pip3 install sphinx sphinx_rtd_theme sphinx_autodoc_typehints breathe
RUN pip3 install pyusb pyserial
RUN apk del build-base linux-headers python3-dev
RUN apk del libffi-dev readline-dev bash ncurses-dev openssl-dev
RUN apk add hidapi --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/ --allow-untrusted
# add about 545 GB of binaries for building PDF file out of LaTeX files
RUN apk add texlive texmf-dist-latexextra
# we could add another 325 GB of binaries for the sake of running just another Javascript app
# but node.js does not install as it should
# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=1
# RUN apk add chromium npm
# RUN npm install -g mermaid.cli

# docker build -f host/docker/exec/texdevenv.docker -t texdevenv:tmp .
# docker run -it --name texdevenv_tmp texdevenv:tmp /bin/sh -c "exit"
# docker export texdevenv_tmp | docker import - texdevenv:latest
# docker rm texdevenv_tmp
# docker rmi texdevenv:tmp
